
==================== FINAL INTERFACE ====================
2018-06-12 20:48:34.826373742 UTC

interface imobiliaria-0.0.0-8b6W5vCle7QHueSmGaAKq9:Middlewares 8002
  interface hash: d6c8ab34dc3b7e239026e7df22f9256c
  ABI hash: 8f621c5c4d26d5c9c28480c9bf4baa78
  export-list hash: 3ef196c2ac873519cc667116d71a1135
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ededd53b8c2278c6bbf6fc26ffae74e4
  sig of: Nothing
  used TH splices: False
  where
exports:
  Middlewares.allowCsrf
  Middlewares.appCorsResourcePolicy
  Middlewares.corsified
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-unicode-symbols-0.2.2.4@base-unicode-symbols-0.2.2.4-GJVqB7ZApypLPm9xi9vicw
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      vault-0.3.0.7@vault-0.3.0.7-FSJCPczyPWW8DwvwP76qt4
                      wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C
                      wai-cors-0.2.5@wai-cors-0.2.5-6H3cGSOljbcJ8PvDNMVPik
                      wai-extra-3.0.20.0@wai-extra-3.0.20.0-Dj9t4P11I8BnwNE6pZcEP
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C:Network.Wai 43c9d22c6cd2fa899c90fca75cdc02dd
import  -/  wai-cors-0.2.5@wai-cors-0.2.5-6H3cGSOljbcJ8PvDNMVPik:Network.Wai.Middleware.Cors 2f2ef0ad2b2088c51fac5204ed9f26fb
import  -/  wai-extra-3.0.20.0@wai-extra-3.0.20.0-Dj9t4P11I8BnwNE6pZcEP:Network.Wai.Middleware.AddHeaders 6d8e030b2e5c036fec1ef807647a619d
a3699a852f394cc39870206a55fae7bb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Middlewares.$trModule2
                   Middlewares.$trModule1) -}
1de6f782298fd89f107265f9aada9361
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Middlewares"#) -}
624cde2fc5289e726f4dc50745ca1bbf
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "imobiliaria-0.0.0-8b6W5vCle7QHueSmGaAKq9"#) -}
187ee25c5bf0c9ec3900be29dc0ded2a
  allowCsrf :: Network.Wai.Middleware
  {- Unfolding: (Network.Wai.Middleware.AddHeaders.addHeaders
                   Middlewares.allowCsrf1) -}
c63fb112833a4ce77e5363cf424b01e8
  allowCsrf1 ::
    [(Data.ByteString.Internal.ByteString,
      Data.ByteString.Internal.ByteString)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.ByteString.Internal.ByteString,
                      Data.ByteString.Internal.ByteString)
                   Middlewares.allowCsrf2
                   (GHC.Types.[]
                      @ (Data.ByteString.Internal.ByteString,
                         Data.ByteString.Internal.ByteString))) -}
7e9d235192eae3e94d38fb69359b83f5
  allowCsrf2 ::
    (Data.ByteString.Internal.ByteString,
     Data.ByteString.Internal.ByteString)
  {- Unfolding: ((Middlewares.allowCsrf4, Middlewares.allowCsrf3)) -}
859b20aec85d69185db3d11487a6172c
  allowCsrf3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "x-csrf-token,authorization"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
192b2659be4c756ad629d368308727de
  allowCsrf4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "Access-Control-Allow-Headers"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
bd6e604a362d8203519358edcff6ada8
  appCorsResourcePolicy ::
    Network.Wai.Middleware.Cors.CorsResourcePolicy
  {- Strictness: m,
     Unfolding: (Network.Wai.Middleware.Cors.CorsResourcePolicy
                   (GHC.Base.Nothing
                      @ ([Network.Wai.Middleware.Cors.Origin], GHC.Types.Bool))
                   Middlewares.appCorsResourcePolicy5
                   Middlewares.appCorsResourcePolicy1
                   (GHC.Base.Nothing @ [Network.HTTP.Types.Header.HeaderName])
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False) -}
a3c9321365fddca5e30f9a1a7e74e8a4
  appCorsResourcePolicy1 :: [Network.HTTP.Types.Header.HeaderName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.HeaderName
                   Middlewares.appCorsResourcePolicy4
                   Middlewares.appCorsResourcePolicy2) -}
46949c808c909a78eaa6d589ce36385f
  appCorsResourcePolicy10 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "PUT"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
5b80899f4b063afd74499a5c2389eca0
  appCorsResourcePolicy11 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "GET"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
0cdbe178e730471be6f8a7143963f4da
  appCorsResourcePolicy12 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "OPTIONS"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
ca5193fd6f21faf58ef9b6f36242487b
  appCorsResourcePolicy2 :: [Network.HTTP.Types.Header.HeaderName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.HeaderName
                   Middlewares.appCorsResourcePolicy3
                   (GHC.Types.[] @ Network.HTTP.Types.Header.HeaderName)) -}
d6bd270ab0c9b9ca85796a3753747c10
  appCorsResourcePolicy3 :: Network.HTTP.Types.Header.HeaderName
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "Content-Type"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 let {
                   ipv2 :: GHC.ForeignPtr.ForeignPtrContents
                   = GHC.ForeignPtr.PlainForeignPtr ipv1
                 } in
                 let {
                   ipv3 :: GHC.Prim.Int# = GHC.Prim.word2Int# ds4
                 } in
                 case Data.CaseInsensitive.Internal.$wfoldCaseBS
                        addr#
                        ipv2
                        0#
                        ipv3 of dt1 { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                 Data.CaseInsensitive.Internal.CI
                   @ Data.ByteString.Internal.ByteString
                   (Data.ByteString.Internal.PS addr# ipv2 0# ipv3)
                   dt1 } } }) -}
0bf73da2bcf7f0a8a36e6545bbdb39c4
  appCorsResourcePolicy4 :: Network.HTTP.Types.Header.HeaderName
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "Authorization"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 let {
                   ipv2 :: GHC.ForeignPtr.ForeignPtrContents
                   = GHC.ForeignPtr.PlainForeignPtr ipv1
                 } in
                 let {
                   ipv3 :: GHC.Prim.Int# = GHC.Prim.word2Int# ds4
                 } in
                 case Data.CaseInsensitive.Internal.$wfoldCaseBS
                        addr#
                        ipv2
                        0#
                        ipv3 of dt1 { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                 Data.CaseInsensitive.Internal.CI
                   @ Data.ByteString.Internal.ByteString
                   (Data.ByteString.Internal.PS addr# ipv2 0# ipv3)
                   dt1 } } }) -}
6a2c08ac263e09cc719555eb5f05a84f
  appCorsResourcePolicy5 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Middlewares.appCorsResourcePolicy12
                   Middlewares.appCorsResourcePolicy6) -}
cbb266cda646a391c0df624159089b9c
  appCorsResourcePolicy6 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Middlewares.appCorsResourcePolicy11
                   Middlewares.appCorsResourcePolicy7) -}
6a4ba2182a280e5c11fb7b26223a9faf
  appCorsResourcePolicy7 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Middlewares.appCorsResourcePolicy10
                   Middlewares.appCorsResourcePolicy8) -}
4178a6c3c4d60889b3808e2e129f5157
  appCorsResourcePolicy8 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Middlewares.appCorsResourcePolicy9
                   (GHC.Types.[] @ Network.HTTP.Types.Method.Method)) -}
e6b6834a250ca872eea1b3b66da79d9a
  appCorsResourcePolicy9 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "POST"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
aee2434911cb67a0accd69194b9af92d
  corsified :: Network.Wai.Middleware
  {- Arity: 4,
     Strictness: <L,1*C1(C1(C1(U(U,U))))><S(LLLLSLLLLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Middlewares.corsified1
                  `cast`
                (<Network.Wai.Application>_R
                 ->_R <Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
77853f9047890b85d3ec7f9b50f00f7e
  corsified1 ::
    Network.Wai.Application
    -> Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 4,
     Strictness: <L,1*C1(C1(C1(U(U,U))))><S(LLLLSLLLLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Wai.Application)
                   (w1 :: Network.Wai.Internal.Request)
                   (w2 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Network.Wai.Middleware.Cors.$wcors
                   Middlewares.corsified2
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   w2
                   w3 }) -}
769d9ff619bc9f3822d1c211f4fe49b4
  corsified2 ::
    Network.Wai.Internal.Request
    -> GHC.Base.Maybe Network.Wai.Middleware.Cors.CorsResourcePolicy
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Network.Wai.Internal.Request) ->
                 Middlewares.corsified_x) -}
37f240bc38a6a14e288b9ce73db9843f
  corsified_x ::
    GHC.Base.Maybe Network.Wai.Middleware.Cors.CorsResourcePolicy
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Network.Wai.Middleware.Cors.CorsResourcePolicy
                   Middlewares.appCorsResourcePolicy) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

